package leetcode;

public class AddTwoNode {

	class Node 
	{
		private int data;
		private Node next;
		private Node previous;
		
		public Node getPrevious() {
			return previous;
		}
		public void setPrevious(Node previous) {
			this.previous = previous;
		}
		public Node getNext() {
			return next;
		}
		public void setNext(Node next) {
			this.next = next;
		}
		public int getData() {
			return data;
		}
		public void setData(int data) {
			this.data = data;
		}
	}
	Node head;
	public void add(int data) {
		Node container = new Node();
		container.setData(data);
		if (head == null) {
			head = container;
		} else {
			Node tempNode = head;
			while (tempNode.getNext()!= null) {
				tempNode = tempNode.getNext();
			}
			tempNode.setNext(container);
		}
	}

	public void show() {
		Node container = head;
		if(container==null) {
			System.out.println("list is empty");
		}else {
			while (container.getNext() != null) {
				System.out.print(container.getData()+" ");
				container = container.getNext();
			}
			System.out.print(container.getData()+" ");
		}
	}
	public void addBoth(AddTwoNode List1,AddTwoNode List2,AddTwoNode List3) {
		Node one=List1.head;
		Node two=List2.head;
		int sum=0,onedata=0,twodata=0;
		
		while(one!=null || two!=null) {
			if(one!=null) {
				onedata=one.getData();
			}
			if(two!=null) {
				twodata=two.getData();
			}
			sum=onedata+twodata;
			List3.add(sum);
			if(sum!=0) {
				one=one.getNext();
				two=two.getNext();
			}
		}
		System.out.println(" ");
		System.out.println("Added List :");
		List3.show();
	}
	public static void main(String[] args)
	{
		AddTwoNode List1 = new AddTwoNode();
		AddTwoNode List2 = new AddTwoNode();
		AddTwoNode List3= new AddTwoNode();

		List1.add(10);
		List1.add(20);
		List1.add(30);
		List1.add(40);

		System.out.println("List 1 :");
		List1.show();

		System.out.println(" ");
		List2.add(1);
		List2.add(2);
		List2.add(3);
		List2.add(4);

		System.out.println("List 2: ");
		List2.show();	

		List3.addBoth(List1,List2,List3);

	}
	
}
