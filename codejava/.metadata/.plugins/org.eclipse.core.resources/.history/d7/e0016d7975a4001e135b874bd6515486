package leetcode;

import leetcode.SortLinkedList.Node;

public class DeleteDuplicate {
	
	class Node 
	{
		private int data;
		private Node next;

		public Node getNext() {
			return next;
		}
		public void setNext(Node next) {
			this.next = next;
		}
		public int getData() {
			return data;
		}
		public void setData(int data) {
			this.data = data;
		}
	}
	Node head;

}
	  public ListNode deleteDuplicates(ListNode head) {
	        // check if head is null or has only one node then return head
	        if(head == null || head.next == null) return  head;

	        // create two pointers temp1 and temp2
	        ListNode temp1 = head;
	        ListNode temp2 = head.next;

	        // run while loop while temp2 is not equls to null
	        while(temp2 != null) {
	            // If there is duplicate node then change the link to next node
	            if(temp1.val == temp2.val) {
	                temp1.next = temp2.next;
	                temp2 = temp2.next;
	            } else {
	                // move pointers to next node
	                temp1 = temp2;
	                temp2 = temp2.next;
	            }
	        }
	public static void main(String[] args) {

	}

}
