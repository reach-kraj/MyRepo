package leetcode;

import java.util.LinkedList;

class SortNodeList {
	public class ListNode {
		int val;
		public int getVal() {
			return val;
		}
		public void setVal(int val) {
			this.val = val;
		}
		public ListNode getNext() {
			return next;
		}
		public void setNext(ListNode next) {
			this.next = next;
		}
		ListNode next;
		
	}
	
	
	public ListNode sortList(ListNode head) {
		if (head==null || head.next==null) {
            return head;
        }
        ListNode mid = Mid_Of_Head(head);
        ListNode head2 = mid.next;
        mid.next = null;
        ListNode t1 = sortList(head);
        ListNode t2 = sortList(head2);
        return merge(t1,t2); 
    }
    public ListNode Mid_Of_Head(ListNode head) {
        ListNode slow = head;
        ListNode fast = head;
        while(fast.next!=null && fast.next.next!=null) {
            slow = slow.next;
            fast = fast.next.next;
        }
        return slow;
    }
    public ListNode merge(ListNode head1, ListNode head2) {
        ListNode head;
        if (head1==null) {
            return head2;
        }
        if (head2==null) {
            return head1;
        }
        if (head1.val<head2.val) {
            head = head1;
            head1 = head1.next;
        }
        else {
            head = head2;
            head2 = head2.next;
        }
        ListNode t = head;
        while (head1!=null && head2!=null) {
            if (head1.val<head2.val) {
                t.next = head1;
                head1 = head1.next;
                t = t.next;
            }
            else {
                t.next = head2;
                head2 = head2.next;
                t = t.next;
            }
        }
        if (head1==null) {
            t.next = head2;
        }
        if (head2==null) {
            t.next = head1;
        }
        return head;
	}
	public static void main(String[] args) {
		ListNode l1=new ListNode();

		l1.add(50);
		l1.add(30);
		l1.add(70);
		l1.add(90);
		l1.add(40);
		l1.add(20);

		System.out.println(sortList(l1));

	}
}